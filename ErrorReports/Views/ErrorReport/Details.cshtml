@model ErrorReports.Models.ErrorReport
@using ErrorReports.Authorization;
@using Microsoft.AspNetCore.Authorization
@using ErrorReports.Models
@inject IAuthorizationService AuthorizationService
@{
    ViewData["Title"] = "Details";
    var assigned = (bool)ViewData["Assigned"] ? "true" : "false";
    var owner = (bool)ViewData["Owner"] ? "true" : "false";

}

<h1>Incident Details</h1>
<nav style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='%236c757d'/%3E%3C/svg%3E&#34;);" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Incident</li>
    </ol>
</nav>

<hr />
<div class="row row-cols-md-2 row-cols-1">

    <div class="col">

        <dl class="row w-100">
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.Title)
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.Title)
            </dd>
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.DateReported)
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.DateReported)
            </dd>
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.ReporterName)
            </dt>
            <dd class="col-sm-9">
                @ViewData["user"]
            </dd>
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.Status)
            </dt>
            <dd class="col-sm-9">
                @Model.Status.ToText()
            </dd>
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.Priority)
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.Priority)
            </dd>
        </dl>


        <div>
            @if ((await AuthorizationService.AuthorizeAsync(
            User, Model,
            IncidentOperations.Update)).Succeeded || (owner == "true" || (User.IsInRole(Constants.IncidentHelpDeskRole) || User.IsInRole(Constants.IncidentManagersRole) || User.IsInRole(Constants.IncidentAdministratorsRole))))
            {
                <a href="@Url.Action("Edit", new { id = Model.Id })" class="btn btn-primary">Edit</a>

            }

            @if ((await AuthorizationService.AuthorizeAsync(
            User, Model,
            IncidentOperations.Delete)).Succeeded)
            {
                <a href="@Url.Action("Delete", new { id = Model.Id })" class="btn btn-danger">Delete</a>
            }

            @if ((await AuthorizationService.AuthorizeAsync(
            User, Model,
            IncidentOperations.Accept)).Succeeded && assigned == "false")
            {
                <form class="d-inline" method="POST" action="@Url.Action("Accept", new { id = Model.Id })">
                    @Html.AntiForgeryToken() <!-- Include this line if you are using AntiForgeryToken for CSRF protection -->
                    <button type="submit" class="btn btn-primary">Accept</button>
                </form>
            }


        </div>

    </div>
    <div class="col">
        <!-- Add comments display and input box -->
        <h2>Comments</h2>
        @if (Model.Comments.Count() != 0)
        {
            <div style="max-height: 300px; overflow-y: auto;">
                @foreach (var comment in Model.Comments)
                {
                    <div>
                        <p class="mb-0">
                            <small>@comment.User</small>
                            <small>@comment.CommentDate</small>
                        </p>
                        <p>@comment.Content</p>
                    </div>
                    <hr/>
                }
            </div>
        }


        <form method="POST" action="@Url.Action("AddComment", new { id = Model.Id })">
            @Html.AntiForgeryToken() <!-- Include this line if you are using AntiForgeryToken for CSRF protection -->
            <div class="form-group">
                <label for="comment">New Comment:</label>
                <textarea class="form-control" id="comment" name="comment" rows="3"></textarea>
            </div>
            <button type="submit" class="btn btn-primary">Add Comment</button>
        </form>
    </div>
</div>


